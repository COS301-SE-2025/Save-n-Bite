# Generated by Django 5.2.3 on 2025-09-23 12:46

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BadgeType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("performance", "Performance"),
                            ("milestone", "Milestone"),
                            ("recognition", "Recognition"),
                            ("monthly", "Monthly Achievement"),
                            ("special", "Special Event"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("uncommon", "Uncommon"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                        ],
                        default="common",
                        max_length=20,
                    ),
                ),
                (
                    "svg_filename",
                    models.CharField(
                        help_text="SVG file name in frontend assets", max_length=100
                    ),
                ),
                (
                    "criteria_description",
                    models.TextField(
                        help_text="Human-readable criteria for earning this badge"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order for displaying badges"
                    ),
                ),
            ],
            options={
                "verbose_name": "Badge Type",
                "verbose_name_plural": "Badge Types",
                "ordering": ["category", "display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProviderBadgeStats",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("total_badges", models.IntegerField(default=0)),
                ("performance_badges", models.IntegerField(default=0)),
                ("milestone_badges", models.IntegerField(default=0)),
                ("recognition_badges", models.IntegerField(default=0)),
                ("monthly_badges", models.IntegerField(default=0)),
                ("special_badges", models.IntegerField(default=0)),
                ("common_badges", models.IntegerField(default=0)),
                ("uncommon_badges", models.IntegerField(default=0)),
                ("rare_badges", models.IntegerField(default=0)),
                ("epic_badges", models.IntegerField(default=0)),
                ("legendary_badges", models.IntegerField(default=0)),
                ("pinned_badges_count", models.IntegerField(default=0)),
                ("first_badge_earned", models.DateTimeField(blank=True, null=True)),
                ("latest_badge_earned", models.DateTimeField(blank=True, null=True)),
                ("last_calculated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badge_stats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider Badge Statistics",
                "verbose_name_plural": "Provider Badge Statistics",
            },
        ),
        migrations.CreateModel(
            name="BadgeLeaderboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "leaderboard_type",
                    models.CharField(
                        choices=[
                            ("rating", "Rating Leaderboard"),
                            ("reviews", "Review Count Leaderboard"),
                            ("orders", "Order Count Leaderboard"),
                            ("revenue", "Revenue Leaderboard"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ]
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(2024)]
                    ),
                ),
                (
                    "first_place_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "second_place_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "third_place_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_finalized",
                    models.BooleanField(
                        default=False,
                        help_text="Whether badges have been awarded for this leaderboard",
                    ),
                ),
                (
                    "first_place",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="first_place_badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "second_place",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="second_place_badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "third_place",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="third_place_badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Badge Leaderboard",
                "verbose_name_plural": "Badge Leaderboards",
                "ordering": ["-year", "-month", "leaderboard_type"],
                "unique_together": {("leaderboard_type", "month", "year")},
            },
        ),
        migrations.CreateModel(
            name="ProviderBadge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("earned_date", models.DateTimeField(auto_now_add=True)),
                (
                    "earned_reason",
                    models.TextField(
                        help_text="Specific reason why this badge was earned"
                    ),
                ),
                (
                    "badge_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional data specific to this badge instance",
                    ),
                ),
                (
                    "is_pinned",
                    models.BooleanField(
                        default=False,
                        help_text="Whether provider has pinned this badge to their profile",
                    ),
                ),
                (
                    "pin_order",
                    models.IntegerField(
                        default=0, help_text="Order of pinned badges on profile"
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(2024)],
                    ),
                ),
                (
                    "badge_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earned_by",
                        to="badges.badgetype",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earned_badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider Badge",
                "verbose_name_plural": "Provider Badges",
                "ordering": ["-earned_date"],
                "indexes": [
                    models.Index(
                        fields=["provider", "is_pinned"],
                        name="badges_prov_provide_911343_idx",
                    ),
                    models.Index(
                        fields=["badge_type", "earned_date"],
                        name="badges_prov_badge_t_89cf20_idx",
                    ),
                    models.Index(
                        fields=["month", "year"], name="badges_prov_month_5515ad_idx"
                    ),
                ],
                "unique_together": {("provider", "badge_type", "month", "year")},
            },
        ),
    ]

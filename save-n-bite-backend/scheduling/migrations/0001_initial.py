# Generated by Django 5.2.3 on 2025-06-24 20:43

import datetime
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('interactions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PickupLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="e.g., 'Main Counter', 'Side Entrance'", max_length=255)),
                ('address', models.TextField()),
                ('instructions', models.TextField(blank=True, help_text='Special pickup instructions')),
                ('contact_person', models.CharField(max_length=255)),
                ('contact_phone', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_locations', to='authentication.foodproviderprofile')),
            ],
            options={
                'unique_together': {('business', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PickupOptimization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('max_concurrent_pickups', models.PositiveIntegerField(default=3)),
                ('optimal_pickup_duration', models.DurationField(default=datetime.timedelta(seconds=900))),
                ('peak_hours_start', models.TimeField(default=datetime.time(17, 0))),
                ('peak_hours_end', models.TimeField(default=datetime.time(19, 0))),
                ('average_pickup_duration', models.DurationField(default=datetime.timedelta(seconds=600))),
                ('peak_day_demand', models.JSONField(blank=True, default=dict)),
                ('efficiency_score', models.FloatField(default=0.0)),
                ('auto_optimize', models.BooleanField(default=True)),
                ('last_optimization', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_optimization', to='authentication.foodproviderprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PickupTimeSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('slot_duration', models.DurationField(default=datetime.timedelta(seconds=1800))),
                ('max_orders_per_slot', models.PositiveIntegerField(default=10)),
                ('buffer_time', models.DurationField(default=datetime.timedelta(seconds=300), help_text='Buffer time between pickups')),
                ('advance_booking_hours', models.PositiveIntegerField(default=2, help_text='Minimum hours in advance for booking')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_time_slots', to='authentication.foodproviderprofile')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='scheduling.pickuplocation')),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('business', 'location', 'day_of_week', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='PickupAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('total_scheduled', models.PositiveIntegerField(default=0)),
                ('total_completed', models.PositiveIntegerField(default=0)),
                ('total_missed', models.PositiveIntegerField(default=0)),
                ('total_cancelled', models.PositiveIntegerField(default=0)),
                ('average_pickup_duration', models.DurationField(blank=True, null=True)),
                ('on_time_percentage', models.FloatField(default=0.0)),
                ('customer_satisfaction_score', models.FloatField(default=0.0)),
                ('peak_hour', models.TimeField(blank=True, null=True)),
                ('busiest_location', models.CharField(blank=True, max_length=255)),
                ('efficiency_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_analytics', to='authentication.foodproviderprofile')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('business', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ScheduledPickup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_date', models.DateField()),
                ('scheduled_start_time', models.TimeField()),
                ('scheduled_end_time', models.TimeField()),
                ('actual_pickup_time', models.DateTimeField(blank=True, null=True)),
                ('pickup_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('missed', 'Missed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('confirmation_code', models.CharField(max_length=10, unique=True)),
                ('qr_code_data', models.JSONField(blank=True, default=dict)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_pickups', to='scheduling.pickuplocation')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_pickup', to='interactions.order')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_pickups', to='scheduling.pickuptimeslot')),
            ],
            options={
                'ordering': ['scheduled_date', 'scheduled_start_time'],
                'indexes': [models.Index(fields=['scheduled_date', 'status'], name='scheduling__schedul_3ded1b_idx'), models.Index(fields=['confirmation_code'], name='scheduling__confirm_eb3787_idx')],
            },
        ),
    ]

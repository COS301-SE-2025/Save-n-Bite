# Generated by Django 5.2.3 on 2025-06-25 08:40

import datetime
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authentication", "0001_initial"),
        ("food_listings", "0001_initial"),
        ("interactions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PickupLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., 'Main Counter', 'Side Entrance'",
                        max_length=255,
                    ),
                ),
                ("address", models.TextField()),
                (
                    "instructions",
                    models.TextField(
                        blank=True, help_text="Special pickup instructions"
                    ),
                ),
                ("contact_person", models.CharField(max_length=255)),
                ("contact_phone", models.CharField(max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pickup_locations",
                        to="authentication.foodproviderprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("business", "name")},
            },
        ),
        migrations.CreateModel(
            name="FoodListingPickupSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("pickup_window", models.CharField(max_length=50)),
                (
                    "total_slots",
                    models.PositiveIntegerField(
                        default=4,
                        help_text="Number of time slots within the pickup window",
                    ),
                ),
                ("max_orders_per_slot", models.PositiveIntegerField(default=5)),
                ("slot_buffer_minutes", models.PositiveIntegerField(default=5)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "food_listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pickup_schedule",
                        to="food_listings.foodlisting",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="food_listing_schedules",
                        to="scheduling.pickuplocation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PickupOptimization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("max_concurrent_pickups", models.PositiveIntegerField(default=3)),
                (
                    "optimal_pickup_duration",
                    models.DurationField(default=datetime.timedelta(seconds=900)),
                ),
                ("peak_hours_start", models.TimeField(default=datetime.time(17, 0))),
                ("peak_hours_end", models.TimeField(default=datetime.time(19, 0))),
                ("auto_optimize", models.BooleanField(default=False)),
                ("auto_send_reminders", models.BooleanField(default=True)),
                ("reminder_hours_before", models.PositiveIntegerField(default=1)),
                ("last_optimization", models.DateTimeField(blank=True, null=True)),
                ("optimization_score", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pickup_optimization",
                        to="authentication.foodproviderprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PickupTimeSlot",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("slot_number", models.PositiveIntegerField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("max_orders_per_slot", models.PositiveIntegerField()),
                ("date", models.DateField()),
                ("current_bookings", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pickup_schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_slots",
                        to="scheduling.foodlistingpickupschedule",
                    ),
                ),
            ],
            options={
                "ordering": ["date", "start_time"],
                "unique_together": {("pickup_schedule", "date", "slot_number")},
            },
        ),
        migrations.CreateModel(
            name="ScheduledPickup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("scheduled_date", models.DateField()),
                ("scheduled_start_time", models.TimeField()),
                ("scheduled_end_time", models.TimeField()),
                ("actual_pickup_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("missed", "Missed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                (
                    "confirmation_code",
                    models.CharField(blank=True, max_length=10, unique=True),
                ),
                ("qr_code_data", models.JSONField(blank=True, null=True)),
                ("reminder_sent", models.BooleanField(default=False)),
                ("customer_notes", models.TextField(blank=True)),
                ("business_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "food_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_pickups",
                        to="food_listings.foodlisting",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_pickups",
                        to="scheduling.pickuplocation",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_pickup",
                        to="interactions.order",
                    ),
                ),
                (
                    "time_slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_pickups",
                        to="scheduling.pickuptimeslot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PickupAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("total_scheduled", models.PositiveIntegerField(default=0)),
                ("total_completed", models.PositiveIntegerField(default=0)),
                ("total_missed", models.PositiveIntegerField(default=0)),
                ("total_cancelled", models.PositiveIntegerField(default=0)),
                ("on_time_percentage", models.FloatField(default=0.0)),
                (
                    "average_pickup_duration",
                    models.DurationField(blank=True, null=True),
                ),
                (
                    "customer_satisfaction_rating",
                    models.FloatField(blank=True, null=True),
                ),
                ("slot_utilization_rate", models.FloatField(default=0.0)),
                ("peak_hour_efficiency", models.FloatField(default=0.0)),
                ("efficiency_score", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pickup_analytics",
                        to="authentication.foodproviderprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("business", "date")},
            },
        ),
    ]

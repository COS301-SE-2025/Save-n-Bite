# Generated by Django 5.2.3 on 2025-06-25 08:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authentication", "0001_initial"),
        ("interactions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessReviewStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_reviews", models.PositiveIntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Average rating (0.00-5.00)",
                        max_digits=3,
                    ),
                ),
                ("rating_1_count", models.PositiveIntegerField(default=0)),
                ("rating_2_count", models.PositiveIntegerField(default=0)),
                ("rating_3_count", models.PositiveIntegerField(default=0)),
                ("rating_4_count", models.PositiveIntegerField(default=0)),
                ("rating_5_count", models.PositiveIntegerField(default=0)),
                ("highest_rating", models.PositiveIntegerField(default=0)),
                ("lowest_rating", models.PositiveIntegerField(default=0)),
                ("reviews_this_month", models.PositiveIntegerField(default=0)),
                ("reviews_this_week", models.PositiveIntegerField(default=0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review_stats",
                        to="authentication.foodproviderprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Business Review Statistics",
                "verbose_name_plural": "Business Review Statistics",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "general_rating",
                    models.IntegerField(
                        blank=True,
                        help_text="Overall rating for the interaction (1-5 stars)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "general_comment",
                    models.TextField(
                        blank=True,
                        help_text="General comment about the interaction",
                        null=True,
                    ),
                ),
                (
                    "food_review",
                    models.TextField(
                        blank=True,
                        help_text="Specific review about the food items",
                        null=True,
                    ),
                ),
                (
                    "business_review",
                    models.TextField(
                        blank=True,
                        help_text="Specific review about the business/service",
                        null=True,
                    ),
                ),
                (
                    "review_source",
                    models.CharField(
                        choices=[
                            ("popup", "Post-completion Popup"),
                            ("history", "Interaction History"),
                        ],
                        default="popup",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("flagged", "Flagged"),
                            ("censored", "Censored"),
                            ("deleted", "Deleted"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                (
                    "moderation_notes",
                    models.TextField(
                        blank=True, help_text="Notes from moderators", null=True
                    ),
                ),
                ("moderated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("interaction_type", models.CharField(max_length=20)),
                (
                    "interaction_total_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "food_items_snapshot",
                    models.JSONField(
                        default=list,
                        help_text="Snapshot of food items from the interaction",
                    ),
                ),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_received",
                        to="authentication.foodproviderprofile",
                    ),
                ),
                (
                    "interaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="interactions.interaction",
                    ),
                ),
                (
                    "moderated_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"admin_rights": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviews_moderated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_written",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReviewModerationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("flag", "Flagged"),
                            ("censor", "Censored"),
                            ("delete", "Deleted"),
                            ("restore", "Restored"),
                            ("note_added", "Note Added"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "reason",
                    models.TextField(help_text="Reason for the moderation action"),
                ),
                ("previous_status", models.CharField(max_length=10)),
                ("new_status", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "moderator",
                    models.ForeignKey(
                        limit_choices_to={"admin_rights": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="moderation_logs",
                        to="reviews.review",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(
                fields=["business", "-created_at"],
                name="reviews_rev_busines_02bd4d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(
                fields=["reviewer", "-created_at"],
                name="reviews_rev_reviewe_5e332e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["status"], name="reviews_rev_status_5966f7_idx"),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(
                fields=["general_rating"], name="reviews_rev_general_ad946c_idx"
            ),
        ),
    ]
